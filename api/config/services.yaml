# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.
# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    router.request_context.host: '%env(DOMAIN)%'
    router.request_context.scheme: https

    app.storage.credit_card: /storage/images/credit_card

    env(MONGODB_URL): ''
    env(MONGODB_DB): ''
    default_admin_email: noreply@coin24.com.ua
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    Redis:
        class: Redis
        calls:
            - connect:
                  - '%env(REDIS_HOST)%'
                  - '%env(int:REDIS_PORT)%'
    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Redis'


    App\Swagger\SwaggerDecorator:
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments: ['@App\Swagger\SwaggerDecorator.inner']
        autoconfigure: false

    # add new fields to jwt on create event
    App\EventListener\JWTCreatedListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreatedRequest }

    App\EventListener\HashPasswordListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: prePersist, entity: App\Entity\Client }

    App\EntityListener\UserImageEntityListener:
        arguments: ['@App\Service\Log\LogServiceODM', '@Symfony\Component\Security\Core\Security' ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\UserImage, lazy: true }

    App\EntityListener\SystemImageEntityListener:
        arguments: ['@App\Service\Log\LogServiceODM', '@Symfony\Component\Security\Core\Security' ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\UserImage, lazy: true }

    App\EntityListener\ClientEntityListener:
        arguments: [
            '@App\Service\Log\LogServiceODM',
            '@Symfony\Component\Security\Core\Security',
            '@mailer.mailer',
            '@App\Service\ReferralSystem\ClientReferralRelationService',
            '@App\Repository\CashbackClientLevelRepository',
            '@App\Repository\CashbackLevelRepository',
            '@request_stack'
        ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\Client, lazy: true }

    App\EntityListener\RequisitionEntityListener:
        arguments: [
                '@App\Service\Log\LogServiceODM',
                '@Symfony\Component\Security\Core\Security',
                '@Doctrine\ORM\EntityManagerInterface',
                '@Symfony\Component\Mailer\MailerInterface',
                '@Symfony\Component\Notifier\ChatterInterface',
                '@Symfony\Component\Mercure\PublisherInterface'
        ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\Requisition, lazy: true }

    App\EntityListener\PostEntityListener:
        arguments: [ '@App\Service\Log\LogServiceODM','@Symfony\Component\Security\Core\Security'
                     ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\Post, lazy: true }

    App\EntityListener\TrafficLinkEntityListener:
        arguments: [ '@Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface' ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\TrafficLink, lazy: true }

    App\EntityListener\ReferralLevelEntityListener:
        arguments: ['@App\Service\Log\LogServiceODM', '@Symfony\Component\Security\Core\Security' ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\ReferralLevel, lazy: true }

    App\EntityListener\CashbackLevelEntityListener:
        arguments: ['@App\Service\Log\LogServiceODM', '@Symfony\Component\Security\Core\Security' ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\CashbackLevel, lazy: true }

    App\EntityListener\CityContactEntityListener:
        arguments: ['@App\Service\Log\LogServiceODM', '@Symfony\Component\Security\Core\Security' ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\CityContact, lazy: true }

    App\EntityListener\CityDescriptionEntityListener:
        arguments: ['@App\Service\Log\LogServiceODM', '@Symfony\Component\Security\Core\Security' ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\CityDescription, lazy: true }

    App\EntityListener\CityContactFieldValueEntityListener:
        arguments: ['@App\Service\Log\LogServiceODM', '@Symfony\Component\Security\Core\Security' ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\CityContactFieldValue, lazy: true }

    App\EntityListener\PayoutRequisitionEntityListener:
        arguments: [ '@App\Service\Log\LogServiceODM',
                     '@Symfony\Component\Security\Core\Security',
                     '@Symfony\Component\Mailer\MailerInterface',
                     '@Symfony\Component\Mercure\PublisherInterface'
        ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\PayoutRequisition, lazy: true }

    App\EntityListener\CashbackClientLevelEntityListener:
        arguments: ['@App\Service\Log\LogServiceODM', '@Symfony\Component\Security\Core\Security' ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\CashbackClientLevel, lazy: true }

    App\EntityListener\ReviewEntityListener:
        arguments: [
                '@App\Service\Log\LogServiceODM',
                '@Symfony\Component\Security\Core\Security',
                '@Symfony\Component\Mercure\PublisherInterface'
        ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\Review, lazy: true }

    App\EntityListener\PairEntityListener:
        arguments: ['@App\Service\Log\LogServiceODM', '@Symfony\Component\Security\Core\Security' ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\Pair, lazy: true }

    App\EntityListener\PairUnitEntityListener:
        arguments: [
                '@App\Service\Log\LogServiceODM',
                '@Symfony\Component\Security\Core\Security',
                '@Symfony\Component\Mercure\PublisherInterface'
        ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\PairUnit, lazy: true }

    App\EntityListener\ReferralUserRelationEntityListener:
        arguments: [ '@App\Service\Log\LogServiceODM', '@Symfony\Component\Security\Core\Security' ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\ReferralUserRelation, lazy: true }

    App\EntityListener\NetworkEntityListener:
        arguments: [ '@App\Service\Log\LogServiceODM', '@Symfony\Component\Security\Core\Security' ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\Network, lazy: true }

    App\EntityListener\CityEntityListener:
        arguments: [ '@App\Service\Log\LogServiceODM', '@Symfony\Component\Security\Core\Security' ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\City, lazy: true }

    App\EntityListener\FeedbackDetailEntityListener:
        arguments: [ '@App\Service\Log\LogServiceODM',
                     '@Symfony\Component\Security\Core\Security',
                     '@mailer.mailer',
                     '@Doctrine\ORM\EntityManagerInterface',
                     '@Symfony\Component\Notifier\ChatterInterface'
                    ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\FeedbackDetail, lazy: true }

    App\EntityListener\FeedbackMessageEntityListener:
        arguments: [
                    '@App\Service\Log\LogServiceODM',
                    '@Symfony\Component\Security\Core\Security',
                    '@Symfony\Component\Notifier\ChatterInterface',
                    '@Symfony\Component\Mercure\PublisherInterface'
                    ]
        tags:
            - {name: doctrine.orm.entity_listener, entity: App\Entity\FeedbackMessage, lazy: true}

        App\EntityListener\CreditCardEntityListener:
            arguments: [
                        '%kernel.project_dir%/storage/images/thumbnails/credit/',
                        '@App\Service\Log\LogServiceODM',
                        '@mailer.mailer',
                        '@Symfony\Component\Security\Core\Security',
                        '@Symfony\Component\Notifier\ChatterInterface',
                        '@ItlabStudio\ApiClient\Service\ApiClient',
                        '@Doctrine\ORM\EntityManagerInterface',
                        '@App\Service\Callback\CallbackService',
                        '@Symfony\Component\Mercure\PublisherInterface'
                        ]
            tags:
                - { name: doctrine.orm.entity_listener, entity: App\Entity\CreditCard, lazy: true }

    App\EntityListener\BankDetailEntityListener:
        arguments: [
                '@App\Service\Log\LogServiceODM',
                '@Symfony\Component\Security\Core\Security'
        ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\BankDetail, lazy: true }

    App\EntityListener\AttributeEntityListener:
        arguments: [
                '@App\Service\Log\LogServiceODM',
                '@Symfony\Component\Security\Core\Security',
                '@Doctrine\ORM\EntityManagerInterface'
        ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\Attribute, lazy: true }

    App\EntityListener\PaymentSystemEntityListener:
        arguments: [
                '@App\Service\Log\LogServiceODM',
                '@Symfony\Component\Security\Core\Security'
        ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\PaymentSystem, lazy: true }


    App\EntityListener\MailingEntityListener:
        arguments: [
                '@App\Service\Log\LogServiceODM',
                '@Symfony\Component\Security\Core\Security',
                '@mailer.mailer',
                '@Doctrine\ORM\EntityManagerInterface'
        ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\Mailing, lazy: true }

    App\EntityListener\ManagerEntityListener:
        arguments: [
                '@App\Service\Log\LogServiceODM',
                '@Symfony\Component\Security\Core\Security',
                '@Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenManagerInterface'
        ]
        tags:
            - { name: doctrine.orm.entity_listener, entity: App\Entity\Manager, lazy: true }


    App\Security\UserChecker:
        arguments: [ '@session', '@request_stack' ]
        public: false
        autowire: false
        autoconfigure: false

    ItlabStudio\ApiClient\Service\ApiClient: '@itlab_studio_api_client_service.api_client'
    
