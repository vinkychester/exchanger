version: "3"

services:

  frontend:
    build: ./frontend
    container_name: exchanger-frontend
    networks:
      - exchanger

  api:
    build:
      context: ./api
      dockerfile: ../docker/api/php/Dockerfile
    container_name: exchanger-api
    volumes:
      - ./api/public:${API_DIRECTORY}/public
      - ./api:${API_DIRECTORY}
      - ./docker/api/php/supervisor:/etc/supervisor.d
    depends_on:
      - rabbitmq
    networks:
      - exchanger

  mongo:
    image: mongo
    container_name: exchanger-mongo
    volumes:
      - mongodata:/data/db
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    networks:
      exchanger:
        ipv4_address: ${MONGO_IPV4}

  mongo-ex:
    image: mongo-express
    container_name: exchanger-mongo_express
    restart: always
    ports:
      - 8085:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASS}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_BASICUSER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_BASICPASS}
    depends_on:
      - mongo
    networks:
      exchanger:
        ipv4_address: ${MONGOEX_IPV4}

  nginx:
    build: ./docker/nginx
    container_name: exchanger-nginx
    volumes:
      - ./docker/nginx/conf.d/body_size.conf:/etc/nginx/conf.d/body_size.conf
      - ./api/public:/var/www/exchanger/api/public
      - ./background/public:/var/www/exchanger/background/public
    depends_on:
      - frontend
      - api
    environment:
      FRONTEND_DIRECTORY: ${FRONTEND_DIRECTORY}
      API_DIRECTORY: ${API_DIRECTORY}
    networks:
      - exchanger

  rabbitmq:
    image: rabbitmq:3.8.5-management-alpine
    container_name: exchanger-rabbitmq
    restart: unless-stopped
    volumes:
      - ./docker/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq:cached
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_COOKIE}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    networks:
      exchanger:
        ipv4_address: ${RABBITMQ_IPV4}

  mercure:
    build:
      context: ./mercure
      dockerfile: ../docker/mercure/Dockerfile
    container_name: exchanger-mercure
    volumes:
      - ./docker/mercure/supervisor:/etc/supervisor.d
      - ./mercure:/var/www/exchanger/mercure
    ports:
      - 8084:80
    restart: unless-stopped
    networks:
      exchanger:
        ipv4_address: ${MERCURE_IPV4}

volumes:
  mercure:
  mongodata:
  rabbitmq:
  nginx:

networks:
  exchanger:
    driver: "bridge"
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16
