server {
    listen 80;
    server_name ${NGINX_HOST};

    access_log  /var/log/nginx/80-access.log  main;
    access_log /var/log/nginx/80-${NGINX_HOST}.access.log main;
    error_log /var/log/nginx/80-${NGINX_HOST}.error.log;

    return 301 https://${NGINX_HOST};
}

server {
    listen ${NGINX_PORT} ssl;
    server_name ${NGINX_HOST};

    ssl_certificate /etc/nginx/certs/${NGINX_CERT_CRT};
    ssl_certificate_key /etc/nginx/certs/${NGINX_CERT_KEY};

    root ${API_DIRECTORY}/public;
    access_log  /var/log/nginx/access.log  main;
    access_log /var/log/nginx/${NGINX_HOST}.access.log main;
    error_log /var/log/nginx/${NGINX_HOST}.error.log;


    location / {
        try_files $uri @prerender;

    }

 location @prerender {
       proxy_set_header X-Prerender-Token jqQoHhA7p0C4aUsai7As;
       proxy_connect_timeout	   90;
       proxy_send_timeout         90;
       proxy_read_timeout         90;

       # Needed for sockets
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection "upgrade";
       #add_header Cache-Control: "no-cache, no-store, must-revalidate";
       #expires -1s;
       add_header Cache-Control "private, max-age=3153600";


       set $prerender 0;
       if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|Slack-ImgProxy|Slackbot-LinkExpanding|Site Analyzer|SiteAnalyzerBot|Viber|Whatsapp|Telegram|W3C_Validator|developers.google.com/+/web/snippet|www.google.com/webmasters/tools/richsnippets|SkypeUriPreview|Discordbot|Google Page Speed|Qwantify|twitter|AhrefsBot") {
           set $prerender 1;
       }


       if ($args ~ "_escaped_fragment_") {
           set $prerender 1;
       }
       if ($http_user_agent ~ "Prerender") {
           set $prerender 0;
       }
       if ($uri ~ "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff)") {
           set $prerender 0;
       }

       #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
       resolver 8.8.8.8;

       if ($prerender = 1) {

           #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
           set $prerender "service.prerender.io";
           rewrite .* /$scheme://$host$request_uri? break;
           proxy_pass http://$prerender;
       }
       if ($prerender = 0) {
           proxy_pass http://frontend:3000;
           root ${FRONTEND_DIRECTORY};
       }
   }


    location /static {
        proxy_pass http://frontend:3000;
        root ${FRONTEND_DIRECTORY};
        #add_header Cache-Control: "no-cache, no-store, must-revalidate";
        #expires -1s;
        add_header Cache-Control "private, must-revalidate, max-age=3153600";
    }

    location ~* ^/static/js/.+\.(js)$ {
        proxy_pass http://frontend:3000;
        root ${FRONTEND_DIRECTORY};
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        #add_header Cache-Control "private, must-revalidate, max-age=1800";
        #expires -1s;
    }

     location ~ ^/(/|static/|images/|img/|javascript/|js/|css/|dist/|media/|panel/|logo192.png|logo512.png|ogImage512.png|robots.txt|favicon.ico|logo-text.svg|.+\.hot-update.js) {
        proxy_pass http://frontend:3000;
        root ${FRONTEND_DIRECTORY};
        access_log off;
        #add_header Cache-Control: "no-cache, no-store, must-revalidate";
        #expires -1s;
        add_header Cache-Control "private, max-age=3153600";

     }

    location /api {
        proxy_pass http://api:5000;
        try_files $uri /index.php$is_args$args;
        root ${API_DIRECTORY}/public;
    }

    location /.well-known/mercure {
        proxy_pass http://${NGINX_MERCURE_IP};
        proxy_read_timeout 24h;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        ## Be sure to set USE_FORWARDED_HEADERS=1 to allow the hub to use those headers ##
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ~ \.php$ {
        fastcgi_pass api:9000;
        fastcgi_buffer_size 32k;
        fastcgi_buffers 8 16k;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        #fastcgi_param SCRIPT_FILENAME ${API_DIRECTORY}/public/index.php;
        #fastcgi_param DOCUMENT_ROOT $realpath_root;
        #internal;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        internal;
    }

    location ~* ^.+\.(html|jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|js|tar|wav|bmp|rtf|mp4|svg|svgz})$ {
        root ${API_DIRECTORY}/public;
        #add_header Cache-Control: "no-cache, no-store, must-revalidate";
        #expires -1s;
        add_header Cache-Control "private, max-age=3153600";
    }

    location ~ \.php$ {
          return 404;
    }
}
